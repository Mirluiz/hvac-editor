{"version":3,"sources":["node_modules/browser-pack/_prelude.js","app/2d/controllers/canvas.controller.ts","app/2d/index.ts","app/2d/models/canvas.model.ts","app/2d/views/canvas.view.ts","app/app.ts","app/main.ts"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import CanvasView from \"../views/canvas.view\";\nimport CanvasModel from \"../models/canvas.model\";\n\nclass CanvasController {\n    view: CanvasView\n    model: CanvasModel\n\n    constructor() {\n        this.model = new CanvasModel();\n        this.view = new CanvasView(this.model)\n        if (this.view.container){\n            this.view.container.addEventListener('mousemove', this.mouseMove.bind(this));\n            this.view.container.addEventListener('mousedown', this.mouseDown.bind(this));\n            this.view.container.addEventListener('mouseup', this.mouseUp.bind(this));\n        }\n    }\n\n    mouseDown(e: Event): void {\n        this.model.clicked = true;\n    }\n\n    mouseMove(e: MouseEvent): void {\n\n\n        if (!this.model.mouse){\n            this.model.mouse = {\n                x: e.offsetX,\n                y: e.offsetY\n            }\n        } else {\n            this.model.mouse.x = e.offsetX;\n            this.model.mouse.y = e.offsetY;\n        }\n\n        if (this.model.clicked){\n            if(this.model.offset){\n                this.model.offset.x += e.movementX;\n                this.model.offset.y += e.movementY;\n            } else {\n                this.model.offset = {\n                    x: 0,\n                    y: 0\n                }\n            }\n        }\n\n        this.view.draw();\n    }\n\n    mouseUp(e: Event) {\n        this.model.clicked = false;\n    }\n\n}\n\nexport default CanvasController;\n","import CanvasController from \"./controllers/canvas.controller\";\n\nclass Controller {\n    canvas: CanvasController = new CanvasController()\n}\n\nexport default Controller\n","import {IVec} from \"../../Geometry/vect\";\n\nclass CanvasModel {\n    mouse: IVec | null = null\n    clicked: boolean = false\n    keyboard: string | null = null\n    offset: IVec = {x: 0, y: 0}\n    config: IConfig = {\n        net: {\n            show: true,\n            step: 20\n        }\n    }\n}\n\ninterface IConfig {\n    net: {\n        show: boolean\n        step: 15 | 20 | 50\n    }\n}\n\nexport default CanvasModel\n","import {IVec} from \"../../Geometry/vect\";\nimport CanvasModel from \"../models/canvas.model\";\n\nclass CanvasView {\n    model: CanvasModel\n    container: HTMLCanvasElement | null\n\n    constructor(model: CanvasModel) {\n        this.model = model;\n        this.container = document.querySelector(\"#editor\");\n        this.init();\n    }\n\n    init(){\n        this.initCanvasContainer();\n    }\n\n    draw(){\n        this.clear();\n        this.drawNet()\n        this.drawMouse()\n    }\n\n    clear(){\n        const ctx = this.container?.getContext(\"2d\");\n\n        if (!ctx || !this.model.mouse || !this.container)return;\n\n        ctx.clearRect(0, 0, this.container.width, this.container.height);\n    }\n\n    drawMouse(){\n        const ctx = this.container?.getContext(\"2d\");\n\n        if (!ctx || !this.model.mouse)return;\n\n        ctx.save();\n\n        ctx.beginPath();\n        ctx.strokeStyle = 'red';\n        ctx.lineWidth = 2;\n        ctx.arc(this.model.mouse.x, this.model.mouse.y, 1, 0, 2 * Math.PI);\n\n        ctx.restore();\n    }\n\n    drawNet() {\n        const ctx = this.container?.getContext(\"2d\");\n\n        if (!ctx || !this.model.mouse || !this.container)return;\n        if (!this.model.config.net.show)return;\n\n        ctx.save();\n\n        ctx.beginPath();\n        ctx.lineWidth = 1;\n\n        let step = this.model.config.net.step;\n        let h = this.container.height;\n        let w = this.container.width;\n\n        let iV = 0;\n        let maxV = w/step\n        while (iV < maxV){\n            let from = this.getGlobalCoordinates(step * iV, 0);\n            let to = this.getGlobalCoordinates(step * iV, h);\n\n            ctx.moveTo(from.x, from.y);\n            ctx.lineTo(to.x, to.y);\n\n            iV++;\n        }\n\n        let iH = 0;\n        let maxH = h/step\n        while (iH < maxH) {\n            let from = this.getGlobalCoordinates(0, step * iH);\n            let to = this.getGlobalCoordinates(w, step * iH);\n\n            ctx.moveTo(from.x, from.y);\n            ctx.lineTo(to.x, to.y);\n\n            iH++;\n        }\n\n        ctx.stroke();\n\n        ctx.restore();\n\n    }\n\n    drawAxis() {\n        const ctx = this.container?.getContext(\"2d\");\n\n        if (!ctx || !this.model.mouse || !this.container)return;\n        if (!this.model.config.net.show)return;\n\n        ctx.save();\n\n        ctx.beginPath();\n\n        let step = this.model.config.net.step;\n        let h = this.container.height;\n        let w = this.container.width;\n        let _i = 0;\n        let _max = this.container.width/step\n        while (_i < _max){\n\n            ctx.moveTo(step * _i, 0);\n            ctx.lineTo(step * _i, h);\n\n            _i++;\n        }\n        ctx.stroke();\n\n        ctx.restore();\n    }\n\n    getGlobalCoordinates(x: number, y: number): IVec {\n        return {\n            x: x + this.model.offset.x,\n            y: y + this.model.offset.y,\n        }\n    }\n\n\n    initCanvasContainer(): void {\n        if (!this.container)return;\n\n        this.container.style.height = '600px';\n        this.container.style.width = '900px';\n        this.container.height = 600;\n        this.container.width = 900;\n        this.container.style.border = '1px solid black';\n    }\n}\n\nexport default CanvasView;\n","import {default as _2DController} from \"./2d\";\n\nclass App {\n  _2d: _2DController = new _2DController()\n\n\n  run() {}\n}\n\nexport default App\n","import App from './app';\n\nconst app = new App();\n\napp.run();"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}