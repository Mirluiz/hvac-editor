{"version":3,"sources":["node_modules/browser-pack/_prelude.js","app/2d/controllers/canvas.controller.ts","app/2d/controllers/mode.controller.ts","app/2d/index.ts","app/2d/models/canvas.model.ts","app/2d/models/wall.model.ts","app/2d/views/canvas.view.ts","app/2d/views/mode.view.ts","app/2d/views/stats.view.ts","app/app.ts","app/main.ts"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import CanvasView from \"../views/canvas.view\";\nimport CanvasModel from \"../models/canvas.model\";\nimport StatsView from \"../views/stats.view\";\nimport ModeView from \"../views/mode.view\";\nimport Wall from \"../models/wall.model\";\n\nclass Canvas {\n  view: CanvasView;\n  stats: StatsView;\n  model: CanvasModel;\n\n  constructor() {\n    this.model = new CanvasModel();\n    this.view = new CanvasView(this.model);\n    this.stats = new StatsView(this.model);\n\n    if (this.view.container) {\n      this.view.container.addEventListener(\n        \"mousemove\",\n        this.mouseMove.bind(this)\n      );\n      this.view.container.addEventListener(\n        \"mousedown\",\n        this.mouseDown.bind(this)\n      );\n      this.view.container.addEventListener(\"mouseup\", this.mouseUp.bind(this));\n      this.view.container.addEventListener(\"wheel\", this.mouseWheel.bind(this));\n    }\n  }\n\n  mouseWheel(e: WheelEvent) {\n    this.stats.render();\n    this.view.draw();\n  }\n\n  mouseDown(e: Event): void {\n    this.model.clicked = true;\n\n    if (!this.model.mouse) return;\n\n    if (this.model.actionMode === \"wall\") {\n      if (!this.model.actionObject) {\n        let _mouse = { x: this.model.mouse.x, y: this.model.mouse.y };\n\n        if (this.model.config.net.bind) {\n          _mouse.x =\n            Math.round(_mouse.x / this.model.config.net.step) *\n            this.model.config.net.step;\n          _mouse.y =\n            Math.round(_mouse.y / this.model.config.net.step) *\n            this.model.config.net.step;\n        }\n\n        this.model.actionObject = this.model.addWall(\n          {\n            x: _mouse.x,\n            y: _mouse.y,\n          },\n          {\n            x: _mouse.x,\n            y: _mouse.y,\n          }\n        );\n      } else {\n        this.model.actionObject = null;\n      }\n    }\n\n    this.stats.render();\n    this.view.draw();\n  }\n\n  mouseMove(e: MouseEvent): void {\n    if (!this.model.mouse) {\n      this.model.mouse = {\n        x: e.offsetX,\n        y: e.offsetY,\n      };\n    } else {\n      this.model.mouse.x = e.offsetX;\n      this.model.mouse.y = e.offsetY;\n    }\n\n    if (this.model.actionObject) {\n      if (this.model.actionObject instanceof Wall) {\n        let _mouse = { x: this.model.mouse.x, y: this.model.mouse.y };\n\n        if (this.model.config.net.bind) {\n          _mouse.x =\n            Math.round(_mouse.x / this.model.config.net.step) *\n            this.model.config.net.step;\n          _mouse.y =\n            Math.round(_mouse.y / this.model.config.net.step) *\n            this.model.config.net.step;\n        }\n\n        this.model.actionObject.end.x = _mouse.x;\n        this.model.actionObject.end.y = _mouse.y;\n      }\n    }\n\n    this.stats.render();\n    this.view.draw();\n  }\n\n  mouseUp(e: Event) {\n    this.model.clicked = false;\n  }\n}\n\nexport default Canvas;\n","import CanvasView from \"../views/canvas.view\";\nimport CanvasModel from \"../models/canvas.model\";\nimport StatsView from \"../views/stats.view\";\nimport ModeView from \"../views/mode.view\";\n\nclass Mode {\n  view: ModeView;\n  model: CanvasModel;\n\n  constructor(model: CanvasModel) {\n    this.model = model;\n    this.view = new ModeView(this.model);\n\n    console.log(this.view);\n\n    if (this.view.container) {\n      this.view.container.addEventListener(\"click\", this.mouseDown.bind(this));\n    }\n  }\n\n  mouseDown(e: Event) {\n    let cT = e.target as HTMLInputElement;\n    let value = cT.value;\n\n    if (value === \"default\" || value === \"wall\") {\n      this.model.actionMode = value;\n    }\n  }\n}\n\nexport default Mode;\n","import CanvasController from \"./controllers/canvas.controller\";\nimport ModeController from \"./controllers/mode.controller\";\nimport StatsView from \"./views/stats.view\";\n\nclass Controller {\n  canvas: CanvasController = new CanvasController();\n\n  mode: ModeController;\n\n  constructor() {\n    this.mode = new ModeController(this.canvas.model);\n  }\n}\n\nexport default Controller;\n","import { IVec } from \"../../geometry/vect\";\nimport Wall from \"./wall.model\";\nimport Pipe from \"./pipe.model\";\n\nclass Canvas {\n  private _walls: Array<Wall> = [];\n\n  actionMode: \"default\" | \"wall\" = \"default\";\n  actionObject: Wall | Pipe | null = null;\n\n  mouse: IVec | null = null;\n  canvasSize: IVec | null = null;\n  mouseCanvasRatio: IVec | null = null;\n  scale: {\n    amount: number;\n    coord: IVec | null;\n    limitReached: boolean;\n  } = {\n    amount: 1,\n    coord: null,\n    limitReached: false,\n  };\n  clicked: boolean = false;\n  keyboard: string | null = null;\n  offset: IVec = { x: 0, y: 0 };\n  config: IConfig = {\n    axis: {\n      show: true,\n    },\n    net: {\n      bind: true,\n      show: true,\n      step: 20,\n    },\n  };\n\n  get walls(): Array<Wall> {\n    return this._walls;\n  }\n\n  set walls(value: Array<Wall>) {\n    this._walls = value;\n  }\n\n  addWall(start: IVec, end: IVec) {\n    let wall = new Wall(start, end);\n\n    this.walls.push(wall);\n    this.walls = this.walls;\n\n    return wall;\n  }\n}\n\ninterface IConfig {\n  axis: {\n    show: boolean;\n  };\n  net: {\n    bind: boolean;\n    show: boolean;\n    step: 15 | 20 | 50;\n  };\n}\n\nexport default Canvas;\n","import { IVec } from \"../../geometry/vect\";\n\nclass Wall {\n  start: IVec;\n  end: IVec;\n  thickness: number = 1;\n\n  constructor(start: IVec, end: IVec) {\n    this.start = start;\n    this.end = end;\n  }\n}\n\nexport default Wall;\n","import { IVec } from \"../../geometry/vect\";\nimport CanvasModel from \"../models/canvas.model\";\n\nclass Canvas {\n  model: CanvasModel;\n  container: HTMLCanvasElement | null;\n\n  constructor(model: CanvasModel) {\n    this.model = model;\n    this.container = document.querySelector(\"#editor\");\n    this.init();\n  }\n\n  init() {\n    this.initCanvasContainer();\n  }\n\n  draw() {\n    this.clear();\n    this.drawNet();\n    // this.drawNet1();\n    // this.drawAxis();\n    this.drawMouse();\n    this.drawWalls();\n  }\n\n  clear() {\n    const ctx = this.container?.getContext(\"2d\");\n\n    if (!ctx || !this.model.mouse || !this.container) return;\n\n    ctx.clearRect(0, 0, this.container.width, this.container.height);\n  }\n\n  drawMouse() {\n    const ctx = this.container?.getContext(\"2d\");\n\n    if (!ctx || !this.model.mouse) return;\n\n    ctx.save();\n\n    ctx.beginPath();\n    ctx.strokeStyle = \"red\";\n    ctx.lineWidth = 2;\n    ctx.arc(this.model.mouse.x, this.model.mouse.y, 1, 0, 2 * Math.PI);\n\n    ctx.restore();\n  }\n\n  drawNet() {\n    const ctx = this.container?.getContext(\"2d\");\n\n    if (!ctx || !this.model.mouse || !this.container) return;\n    if (!this.model.config.net.show) return;\n\n    ctx.save();\n\n    ctx.beginPath();\n    ctx.lineWidth = 1;\n\n    let step = this.model.config.net.step * this.model.scale.amount;\n    let h = this.container.height;\n    let w = this.container.width;\n    let netOffset: IVec = {\n      x: this.model.offset.x % step,\n      y: this.model.offset.y % step,\n    };\n\n    //x\n    let iV = 0;\n    let maxV = w / step;\n    while (iV <= maxV) {\n      let from: IVec = { x: step * iV + netOffset.x, y: 0 };\n      let to: IVec = { x: step * iV + netOffset.x, y: h };\n\n      ctx.moveTo(from.x, from.y);\n      ctx.lineTo(to.x, to.y);\n      iV++;\n    }\n\n    //y\n    let iH = 0;\n    let maxH = h / step;\n    while (iH <= maxH) {\n      let from: IVec = { x: 0, y: step * iH + netOffset.y };\n      let to: IVec = { x: w, y: step * iH + netOffset.y };\n\n      ctx.moveTo(from.x, from.y);\n      ctx.lineTo(to.x, to.y);\n\n      iH++;\n    }\n\n    ctx.globalAlpha = 0.2;\n\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  drawNet1() {\n    const ctx = this.container?.getContext(\"2d\");\n\n    if (!ctx || !this.model.mouse || !this.container) return;\n    if (!this.model.config.net.show) return;\n\n    ctx.save();\n\n    ctx.beginPath();\n    ctx.lineWidth = 1;\n\n    // let step = this.model.config.net.step * this.model.scale.amount;\n    let step = this.model.config.net.step;\n    let h = this.container.height;\n    let w = this.container.width;\n\n    //x\n    let iV = 0;\n    let maxV = w / step;\n    while (iV <= maxV) {\n      let from: IVec = this.getWorldCoordinates(step * iV, 0);\n      let to: IVec = this.getWorldCoordinates(step * iV, h);\n\n      ctx.moveTo(from.x, from.y);\n      ctx.lineTo(to.x, to.y);\n      iV++;\n    }\n\n    //y\n    let iH = 0;\n    let maxH = h / step;\n    while (iH <= maxH) {\n      let from: IVec = this.getWorldCoordinates(0, step * iH);\n      let to: IVec = this.getWorldCoordinates(w, step * iH);\n\n      ctx.moveTo(from.x, from.y);\n      ctx.lineTo(to.x, to.y);\n\n      iH++;\n    }\n\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  drawAxis() {\n    const ctx = this.container?.getContext(\"2d\");\n\n    if (!ctx || !this.model.mouse || !this.container) return;\n    if (!this.model.config.axis.show) return;\n\n    ctx.save();\n    ctx.beginPath();\n\n    let h = this.container.height;\n    let w = this.container.width;\n\n    let x_From = this.getWorldCoordinates(0, 0);\n    let x_To = this.getWorldCoordinates(w, 0);\n    let y_From = this.getWorldCoordinates(0, 0);\n    let y_To = this.getWorldCoordinates(0, h);\n\n    ctx.moveTo(0, x_From.y);\n    ctx.lineTo(w, x_To.y);\n\n    ctx.moveTo(y_From.x, 0);\n    ctx.lineTo(y_To.x, h);\n    ctx.strokeStyle = \"red\";\n\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  drawWalls() {\n    let walls = this.model.walls;\n\n    walls?.map((wall) => {\n      console.log(\"this.container\", this.container);\n      if (!this.container) return;\n\n      const ctx = this.container.getContext(\"2d\");\n\n      if (!ctx) return;\n\n      ctx.save();\n      ctx.beginPath();\n\n      let from = this.getWorldCoordinates(wall.start.x, wall.start.y);\n      let to = this.getWorldCoordinates(wall.end.x, wall.end.y);\n\n      console.log(\"from\", from, to);\n\n      ctx.moveTo(from.x, from.y);\n      ctx.lineTo(to.x, to.y);\n\n      ctx.strokeStyle = \"red\";\n      ctx.lineWidth = 2;\n\n      ctx.stroke();\n      ctx.restore();\n    });\n  }\n\n  //TODO: apply scale transformation here\n  getWorldCoordinates(x: number, y: number): IVec {\n    let _this = this;\n\n    let translate = function (vec: IVec): IVec {\n      return {\n        x: vec.x + _this.model.offset.x,\n        y: vec.y + _this.model.offset.y,\n      };\n    }.bind(this);\n\n    let scale = function (vec: IVec): IVec {\n      return {\n        x: vec.x * _this.model.scale.amount,\n        y: vec.y * _this.model.scale.amount,\n      };\n    };\n\n    let t = { x, y };\n    t = scale(t);\n    // t = rotation(t); TODO order is scaling rotation translation\n    t = translate(t);\n\n    return t;\n  }\n\n  //x: (x + this.model.offset.x) * this.model.scale.amount * this.model.scale.coord.x,\n  //       y: (y + this.model.offset.y)  * this.model.scale.amount,\n  // getLocalCoordinates(x: number, y: number) {\n  //   return {\n  //     x: (x + this.model.offset.x) * this.model.scale.amount * this.model.scale.coord ,\n  //     y: (y + this.model.offset.y)  * this.model.scale.amount,\n  //   };\n  // }\n\n  initCanvasContainer(): void {\n    if (!this.container) return;\n\n    this.container.style.height = \"600px\";\n    this.container.style.width = \"900px\";\n    this.container.height = 600;\n    this.container.width = 900;\n    this.container.style.border = \"1px solid black\";\n\n    this.model.canvasSize = {\n      y: 600,\n      x: 900,\n    };\n  }\n}\n\nexport default Canvas;\n","import CanvasModel from \"../models/canvas.model\";\n\nclass Mode {\n  model: CanvasModel;\n  container: HTMLElement | null;\n\n  constructor(model: CanvasModel) {\n    this.model = model;\n    this.container = document.querySelector(\"#mode\");\n  }\n}\n\nexport default Mode;\n","import CanvasModel from \"../models/canvas.model\";\n\nclass Stats {\n  model: CanvasModel;\n  container: HTMLElement | null;\n\n  constructor(model: CanvasModel) {\n    this.model = model;\n    this.container = document.querySelector(\"#stats\");\n    this.init();\n  }\n\n  init() {\n    this.initContainer();\n  }\n\n  render() {\n    if (!this.container) return;\n\n    this.container.innerHTML = `\n      <div style=\"display: flex; flex-direction: column\">\n        <div>x - ${Math.round(this.model.offset.x)} \n        / y - ${Math.round(this.model.offset.y)}</div>\n        \n        <div>x - ${Math.round(this.model.mouse?.x ?? 0)} \n        / y - ${Math.round(this.model.mouse?.y ?? 0)}</div>\n        \n        <div>scale - ${this.model.scale.amount}</div>\n        <div>width - ${this.model.canvasSize?.x} / height - ${\n      this.model.canvasSize?.y\n    } / </div>\n        <div>ratio x ${this.model.mouseCanvasRatio?.x} / y ${\n      this.model.mouseCanvasRatio?.y\n    }</div>\n        <div>mode is ${this.model.actionMode}</div>\n      </div>\n    `;\n  }\n\n  initContainer(): void {\n    if (!this.container) return;\n\n    this.container.style.height = \"150px\";\n    this.container.style.width = \"200px\";\n    this.container.style.border = \"1px solid black\";\n    this.container.style.marginLeft = \"10px\";\n  }\n}\n\nexport default Stats;\n","import {default as _2DController} from \"./2d\";\n\nclass App {\n  _2d: _2DController = new _2DController()\n\n\n  run() {}\n}\n\nexport default App\n","import App from './app';\n\nconst app = new App();\n\napp.run();"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}