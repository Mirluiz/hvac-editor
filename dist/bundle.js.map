{"version":3,"sources":["node_modules/browser-pack/_prelude.js","app/2d/controllers/canvas.controller.ts","app/2d/index.ts","app/2d/models/canvas.model.ts","app/2d/views/canvas.view.ts","app/app.ts","app/main.ts"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import CanvasView from \"../views/canvas.view\";\nimport CanvasModel from \"../models/canvas.model\";\n\nclass CanvasController {\n  view: CanvasView;\n  model: CanvasModel;\n\n  constructor() {\n    this.model = new CanvasModel();\n    this.view = new CanvasView(this.model);\n    if (this.view.container) {\n      this.view.container.addEventListener(\n        \"mousemove\",\n        this.mouseMove.bind(this)\n      );\n      this.view.container.addEventListener(\n        \"mousedown\",\n        this.mouseDown.bind(this)\n      );\n      this.view.container.addEventListener(\"mouseup\", this.mouseUp.bind(this));\n      this.view.container.addEventListener(\"wheel\", this.mouseWheel.bind(this));\n    }\n  }\n\n  mouseWheel(e: WheelEvent) {\n    this.model.scale.amount += -Math.sign(e.deltaY) * 0.01;\n    this.model.scale.amount = Math.min(\n      Math.max(0.5, this.model.scale.amount),\n      4\n    );\n    this.model.scale.coord = {\n      x: e.offsetX,\n      y: e.offsetY,\n    };\n\n    let _el: HTMLCanvasElement | null = document.querySelector(\"#editor\");\n    let w, h;\n\n    if (_el) {\n      w = _el.width;\n      h = _el.height;\n      console.log(\n        \"--\",\n        w,\n        w / this.model.scale.amount,\n        this.model.scale.amount,\n        (w / this.model.scale.amount - w) * (e.offsetX / w)\n      );\n      this.model.offset.x +=\n        (w / this.model.scale.amount - w) * (e.offsetX / w);\n      this.model.offset.y +=\n        (h / this.model.scale.amount - h) * (e.offsetY / h);\n    }\n\n    this.view.draw();\n  }\n\n  mouseDown(e: Event): void {\n    this.model.clicked = true;\n  }\n\n  mouseMove(e: MouseEvent): void {\n    if (!this.model.mouse) {\n      this.model.mouse = {\n        x: e.offsetX,\n        y: e.offsetY,\n      };\n    } else {\n      this.model.mouse.x = e.offsetX;\n      this.model.mouse.y = e.offsetY;\n    }\n\n    if (this.model.clicked) {\n      if (this.model.offset) {\n        this.model.offset.x += e.movementX;\n        this.model.offset.y += e.movementY;\n      } else {\n        this.model.offset = {\n          x: 0,\n          y: 0,\n        };\n      }\n    }\n\n    this.view.draw();\n  }\n\n  mouseUp(e: Event) {\n    this.model.clicked = false;\n  }\n}\n\nexport default CanvasController;\n","import CanvasController from \"./controllers/canvas.controller\";\n\nclass Controller {\n    canvas: CanvasController = new CanvasController()\n}\n\nexport default Controller\n","import { IVec } from \"../../geometry/vect\";\n\nclass CanvasModel {\n  mouse: IVec | null = null;\n  scale: {\n    amount: number,\n    coord: IVec | null\n  } = {\n    amount: 1,\n    coord: null\n  }\n  clicked: boolean = false;\n  keyboard: string | null = null;\n  offset: IVec = { x: 0, y: 0 };\n  config: IConfig = {\n    axis: {\n      show: true,\n    },\n    net: {\n      show: true,\n      step: 20,\n    },\n  };\n}\n\ninterface IConfig {\n  axis: {\n    show: boolean;\n  };\n  net: {\n    show: boolean;\n    step: 15 | 20 | 50;\n  };\n}\n\nexport default CanvasModel;\n","import { IVec } from \"../../geometry/vect\";\nimport CanvasModel from \"../models/canvas.model\";\n\nclass CanvasView {\n  model: CanvasModel;\n  container: HTMLCanvasElement | null;\n\n  constructor(model: CanvasModel) {\n    this.model = model;\n    this.container = document.querySelector(\"#editor\");\n    this.init();\n  }\n\n  init() {\n    this.initCanvasContainer();\n  }\n\n  draw() {\n    this.clear();\n    // this.drawNet();\n    this.drawNet1();\n    this.drawAxis();\n    this.drawMouse();\n  }\n\n  clear() {\n    const ctx = this.container?.getContext(\"2d\");\n\n    if (!ctx || !this.model.mouse || !this.container) return;\n\n    ctx.clearRect(0, 0, this.container.width, this.container.height);\n  }\n\n  drawMouse() {\n    const ctx = this.container?.getContext(\"2d\");\n\n    if (!ctx || !this.model.mouse) return;\n\n    ctx.save();\n\n    ctx.beginPath();\n    ctx.strokeStyle = \"red\";\n    ctx.lineWidth = 2;\n    ctx.arc(this.model.mouse.x, this.model.mouse.y, 1, 0, 2 * Math.PI);\n\n    ctx.restore();\n  }\n\n  drawNet() {\n    const ctx = this.container?.getContext(\"2d\");\n\n    if (!ctx || !this.model.mouse || !this.container) return;\n    if (!this.model.config.net.show) return;\n\n    ctx.save();\n\n    ctx.beginPath();\n    ctx.lineWidth = 1;\n\n    let step = this.model.config.net.step * this.model.scale.amount;\n    let h = this.container.height;\n    let w = this.container.width;\n    let netOffset: IVec = {\n      x: this.model.offset.x % step,\n      y: this.model.offset.y % step,\n    };\n\n    //x\n    let iV = 0;\n    let maxV = w / step;\n    while (iV <= maxV) {\n      let from: IVec = { x: step * iV + netOffset.x, y: 0 };\n      let to: IVec = { x: step * iV + netOffset.x, y: h };\n\n      ctx.moveTo(from.x, from.y);\n      ctx.lineTo(to.x, to.y);\n      iV++;\n    }\n\n    //y\n    let iH = 0;\n    let maxH = h / step;\n    while (iH <= maxH) {\n      let from: IVec = { x: 0, y: step * iH + netOffset.y };\n      let to: IVec = { x: w, y: step * iH + netOffset.y };\n\n      ctx.moveTo(from.x, from.y);\n      ctx.lineTo(to.x, to.y);\n\n      iH++;\n    }\n\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  drawNet1() {\n    const ctx = this.container?.getContext(\"2d\");\n\n    if (!ctx || !this.model.mouse || !this.container) return;\n    if (!this.model.config.net.show) return;\n\n    ctx.save();\n\n    ctx.beginPath();\n    ctx.lineWidth = 1;\n\n    let step = this.model.config.net.step * this.model.scale.amount;\n    let h = this.container.height;\n    let w = this.container.width;\n\n    //x\n    let iV = 0;\n    let maxV = w / step;\n    while (iV <= maxV) {\n      let from: IVec = this.getWorldCoordinates(step * iV, 0);\n      let to: IVec = this.getWorldCoordinates(step * iV, h);\n\n      ctx.moveTo(from.x, from.y);\n      ctx.lineTo(to.x, to.y);\n      iV++;\n    }\n\n    //y\n    let iH = 0;\n    let maxH = h / step;\n    while (iH <= maxH) {\n      let from: IVec = this.getWorldCoordinates(0, step * iH);\n      let to: IVec = this.getWorldCoordinates(w, step * iH);\n\n      ctx.moveTo(from.x, from.y);\n      ctx.lineTo(to.x, to.y);\n\n      iH++;\n    }\n\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  drawAxis() {\n    const ctx = this.container?.getContext(\"2d\");\n\n    if (!ctx || !this.model.mouse || !this.container) return;\n    if (!this.model.config.axis.show) return;\n\n    ctx.save();\n    ctx.beginPath();\n\n    let h = this.container.height;\n    let w = this.container.width;\n\n    let x_From = this.getWorldCoordinates(0, 0);\n    let x_To = this.getWorldCoordinates(w, 0);\n    let y_From = this.getWorldCoordinates(0, 0);\n    let y_To = this.getWorldCoordinates(0, h);\n\n    ctx.moveTo(0, x_From.y);\n    ctx.lineTo(w, x_To.y);\n\n    ctx.moveTo(y_From.x, 0);\n    ctx.lineTo(y_To.x, h);\n    ctx.strokeStyle = \"red\";\n\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  //TODO: apply scale transformation here\n  getWorldCoordinates(x: number, y: number): IVec {\n    let _this = this;\n\n    let translate = function (vec: IVec): IVec {\n      return {\n        x: vec.x + _this.model.offset.x,\n        y: vec.y + _this.model.offset.y,\n      };\n    }.bind(this);\n\n    let scale = function (vec: IVec): IVec {\n      return {\n        x: vec.x * _this.model.scale.amount,\n        y: vec.y * _this.model.scale.amount,\n      };\n    };\n\n    let t = { x, y };\n    t = translate(t);\n    t = scale(t);\n\n    return t;\n  }\n\n  //x: (x + this.model.offset.x) * this.model.scale.amount * this.model.scale.coord.x,\n  //       y: (y + this.model.offset.y)  * this.model.scale.amount,\n  // getLocalCoordinates(x: number, y: number) {\n  //   return {\n  //     x: (x + this.model.offset.x) * this.model.scale.amount * this.model.scale.coord ,\n  //     y: (y + this.model.offset.y)  * this.model.scale.amount,\n  //   };\n  // }\n\n  initCanvasContainer(): void {\n    if (!this.container) return;\n\n    this.container.style.height = \"600px\";\n    this.container.style.width = \"900px\";\n    this.container.height = 600;\n    this.container.width = 900;\n    this.container.style.border = \"1px solid black\";\n  }\n}\n\nexport default CanvasView;\n","import {default as _2DController} from \"./2d\";\n\nclass App {\n  _2d: _2DController = new _2DController()\n\n\n  run() {}\n}\n\nexport default App\n","import App from './app';\n\nconst app = new App();\n\napp.run();"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}