{"version":3,"sources":["node_modules/browser-pack/_prelude.js","app/2d/controllers/canvas.controller.ts","app/2d/controllers/mode.controller.ts","app/2d/index.ts","app/2d/models/architecture/wall.model.ts","app/2d/models/canvas.model.ts","app/2d/models/geometry/arc.model.ts","app/2d/models/geometry/line.model.ts","app/2d/models/heating/pipe.model.ts","app/2d/models/heating/valve.model.ts","app/2d/models/main.model.ts","app/2d/views/canvas.view.ts","app/2d/views/mode.view.ts","app/2d/views/stats.view.ts","app/app.ts","app/geometry/vect.ts","app/main.ts","app/utils.ts"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import CanvasView from \"../views/canvas.view\";\nimport CanvasModel from \"../models/canvas.model\";\nimport StatsView from \"../views/stats.view\";\nimport Wall from \"../models/architecture/wall.model\";\nimport Pipe from \"../models/heating/pipe.model\";\nimport Line from \"../models/geometry/line.model\";\nimport Valve from \"../models/heating/valve.model\";\nimport { Vector } from \"../../geometry/vect\";\nimport PipeModel from \"../models/heating/pipe.model\";\n\nclass Canvas {\n  view: CanvasView;\n  stats: StatsView;\n  model: CanvasModel;\n\n  constructor() {\n    this.model = new CanvasModel();\n    this.view = new CanvasView(this.model);\n    this.stats = new StatsView(this.model);\n\n    if (this.view.container) {\n      this.view.container.addEventListener(\n        \"mousemove\",\n        this.mouseMove.bind(this)\n      );\n      this.view.container.addEventListener(\n        \"mousedown\",\n        this.mouseDown.bind(this)\n      );\n      this.view.container.addEventListener(\"mouseup\", this.mouseUp.bind(this));\n      this.view.container.addEventListener(\"wheel\", this.mouseWheel.bind(this));\n    }\n  }\n\n  mouseWheel(e: WheelEvent) {\n    this.stats.render();\n    this.view.draw();\n  }\n\n  mouseDown(e: Event): void {\n    this.model.clicked = true;\n\n    if (!this.model.mouse) return;\n\n    let _mouse = new Vector(this.model.mouse.x, this.model.mouse.y);\n\n    if (this.model.config.net.bind) {\n      _mouse.x =\n        Math.round(_mouse.x / this.model.config.net.step) *\n        this.model.config.net.step;\n      _mouse.y =\n        Math.round(_mouse.y / this.model.config.net.step) *\n        this.model.config.net.step;\n    }\n\n    if (!this.model.actionObject) {\n      switch (this.model.actionMode) {\n        case \"wall\":\n          this.model.actionObject = this.model.addWall(\n            new Vector(_mouse.x, _mouse.y),\n            new Vector(_mouse.x, _mouse.y)\n          );\n          break;\n        case \"pipe\":\n          let p = new Pipe(\n            new Vector(_mouse.x, _mouse.y),\n            new Vector(_mouse.x, _mouse.y)\n          );\n          p.color = \"red\";\n          p.width = 5;\n\n          this.model.actionObject = p;\n          break;\n      }\n    } else {\n      switch (this.model.actionMode) {\n        case \"wall\":\n          this.model.addWall(\n            this.model.actionObject.start,\n            this.model.actionObject.end\n          );\n          break;\n        case \"pipe\":\n          this.model.addPipe(\n            this.model.actionObject.start,\n            this.model.actionObject.end\n          );\n          break;\n      }\n\n      this.model.actionObject = null;\n\n      let p = new Pipe(\n        new Vector(_mouse.x, _mouse.y),\n        new Vector(_mouse.x, _mouse.y)\n      );\n      p.color = \"red\";\n      p.width = 5;\n\n      this.model.actionObject = p;\n    }\n\n    if (!this.model.placingObject) {\n      if (this.model.config.net.bind) {\n        _mouse.x =\n          Math.round(_mouse.x / this.model.config.net.step) *\n          this.model.config.net.step;\n        _mouse.y =\n          Math.round(_mouse.y / this.model.config.net.step) *\n          this.model.config.net.step;\n      }\n\n      switch (this.model.actionMode) {\n        case \"valve\":\n          let v = new Valve(new Vector(_mouse.x, _mouse.y));\n          this.model.placingObject = v;\n          break;\n      }\n    } else {\n      switch (this.model.actionMode) {\n        case \"valve\":\n          this.model.addValve(this.model.placingObject.center);\n          break;\n      }\n\n      this.model.actionObject = null;\n    }\n\n    this.stats.render();\n    this.view.draw();\n  }\n\n  mouseMove(e: MouseEvent): void {\n    if (!this.model.mouse) {\n      this.model.mouse = {\n        x: e.offsetX,\n        y: e.offsetY,\n      };\n    } else {\n      this.model.mouse.x = e.offsetX;\n      this.model.mouse.y = e.offsetY;\n    }\n\n    if (this.model.actionObject) {\n      if (this.model.actionObject instanceof Pipe) {\n        let _mouse = new Vector(this.model.mouse.x, this.model.mouse.y);\n\n        if (this.model.config.net.bind) {\n          _mouse.x =\n            Math.round(_mouse.x / this.model.config.net.step) *\n            this.model.config.net.step;\n          _mouse.y =\n            Math.round(_mouse.y / this.model.config.net.step) *\n            this.model.config.net.step;\n        }\n        this.model.actionObject.end.x = _mouse.x;\n        this.model.actionObject.end.y = _mouse.y;\n\n        // this.model.actionObject.getNearestCoordinateOnPipe(\n        //   new Vector(this.model.mouse.x, this.model.mouse.y),\n        //   this.model.pipes[0]\n        // );\n      }\n    }\n\n    if (this.model.placingObject) {\n      if (this.model.placingObject instanceof Valve) {\n        let _mouse = new Vector(this.model.mouse.x, this.model.mouse.y);\n\n        if (this.model.config.net.bind) {\n          _mouse.x =\n            Math.round(_mouse.x / this.model.config.net.step) *\n            this.model.config.net.step;\n          _mouse.y =\n            Math.round(_mouse.y / this.model.config.net.step) *\n            this.model.config.net.step;\n        }\n        this.model.placingObject.center.x = _mouse.x;\n        this.model.placingObject.center.y = _mouse.y;\n      }\n    }\n\n    this.stats.render();\n    this.view.draw();\n  }\n\n  mouseUp(e: Event) {\n    this.model.clicked = false;\n  }\n}\n\nexport default Canvas;\n","import CanvasView from \"../views/canvas.view\";\nimport CanvasModel from \"../models/canvas.model\";\nimport StatsView from \"../views/stats.view\";\nimport ModeView from \"../views/mode.view\";\n\nclass Mode {\n  view: ModeView;\n  model: CanvasModel;\n\n  constructor(model: CanvasModel) {\n    this.model = model;\n    this.view = new ModeView(this.model);\n\n    console.log(this.view);\n\n    if (this.view.container) {\n      this.view.container.addEventListener(\"click\", this.mouseDown.bind(this));\n    }\n  }\n\n  mouseDown(e: Event) {\n    let cT = e.target as HTMLInputElement;\n    let value = cT.value;\n\n    if (\n      value === \"default\" ||\n      value === \"wall\" ||\n      value === \"pipe\" ||\n      value === \"valve\"\n    ) {\n      this.model.actionMode = value;\n    }\n  }\n}\n\nexport default Mode;\n","import CanvasController from \"./controllers/canvas.controller\";\nimport ModeController from \"./controllers/mode.controller\";\nimport StatsView from \"./views/stats.view\";\n\nclass Controller {\n  canvas: CanvasController = new CanvasController();\n\n  mode: ModeController;\n\n  constructor() {\n    this.mode = new ModeController(this.canvas.model);\n  }\n}\n\nexport default Controller;\n","import { IVec } from \"../../../geometry/vect\";\nimport Line from \"../geometry/line.model\";\n\nclass Wall extends Line {\n  constructor(start: IVec, end: IVec) {\n    super(start, end);\n  }\n}\n\nexport default Wall;\n","import { ICoord, IVec, Vector } from \"../../geometry/vect\";\nimport Wall from \"./architecture/wall.model\";\nimport Pipe from \"./heating/pipe.model\";\nimport Valve from \"./heating/valve.model\";\n\nclass Canvas {\n  private _walls: Array<Wall> = [];\n  private _pipes: Array<Pipe> = [];\n  private _valves: Array<Valve> = [];\n\n  actionMode: \"default\" | \"wall\" | \"pipe\" | \"valve\" = \"pipe\";\n  actionObject: Wall | Pipe | null = null;\n  placingObject: Valve | null = null;\n\n  nearestObject: IVec | null = null;\n\n  mouse: ICoord | null = null;\n  canvasSize: ICoord | null = null;\n  mouseCanvasRatio: ICoord | null = null;\n  scale: {\n    amount: number;\n    coord: ICoord | null;\n    limitReached: boolean;\n  } = {\n    amount: 1,\n    coord: null,\n    limitReached: false,\n  };\n  clicked: boolean = false;\n  keyboard: string | null = null;\n  offset: ICoord = { x: 0, y: 0 };\n  config: IConfig = {\n    axis: {\n      show: true,\n    },\n    net: {\n      bind: true,\n      show: true,\n      step: 20,\n    },\n  };\n\n  get walls(): Array<Wall> {\n    return this._walls;\n  }\n\n  set walls(value: Array<Wall>) {\n    this._walls = value;\n  }\n\n  get pipes(): Array<Pipe> {\n    return this._pipes;\n  }\n\n  set pipes(value: Array<Pipe>) {\n    this._pipes = value;\n  }\n\n  get valves(): Array<Valve> {\n    return this._valves;\n  }\n\n  set valves(value: Array<Valve>) {\n    this._valves = value;\n  }\n\n  addWall(start: IVec, end: IVec) {\n    let wall = new Wall(start, end);\n\n    wall.color = \"black\";\n    wall.width = 5;\n\n    this.walls.push(wall);\n    this.walls = this.walls;\n\n    return wall;\n  }\n\n  addPipe(start: IVec, end: IVec) {\n    let pipe = new Pipe(start, end);\n\n    pipe.color = \"red\";\n    pipe.width = 5;\n\n    this.pipes.push(pipe);\n    this.pipes = this.pipes;\n\n    return pipe;\n  }\n\n  addValve(center: IVec) {\n    let valve = new Valve(center);\n\n    valve.color = \"red\";\n    valve.width = 2;\n\n    this.valves.push(valve);\n    this.valves = this.valves;\n\n    return valve;\n  }\n}\n\ninterface IConfig {\n  axis: {\n    show: boolean;\n  };\n  net: {\n    bind: boolean;\n    show: boolean;\n    step: 15 | 20 | 50;\n  };\n}\n\nexport default Canvas;\n","import { IVec } from \"../../../geometry/vect\";\nimport Main from \"../main.model\";\n\nclass Arc extends Main {\n  radius: number = 5;\n  center: IVec;\n\n  color: string = \"#fff\";\n  width: number = 1;\n\n  constructor(center: IVec) {\n    super();\n\n    this.center = center;\n  }\n}\n\nexport default Arc;\n","import { IVec } from \"../../../geometry/vect\";\nimport Main from \"../main.model\";\n\nclass Line extends Main {\n  thickness: number = 1;\n  start: IVec;\n  end: IVec;\n\n  color: string = \"#000\";\n  width: number = 1;\n\n  constructor(start: IVec, end: IVec) {\n    super();\n\n    this.start = start;\n    this.end = end;\n  }\n}\n\nexport default Line;\n","import { ICoord, IVec, Vector } from \"../../../geometry/vect\";\nimport Line from \"../geometry/line.model\";\n\nclass Pipe extends Line {\n  constructor(start: IVec, end: IVec) {\n    super(start, end);\n  }\n\n  getNearestPipe(pipes: Array<Pipe>) {\n    let pipe = pipes.find((pipe) => {\n      if (pipe._id === this._id) return;\n\n      let start = pipe.start.distanceTo(this.end);\n      let end = pipe.end.distanceTo(this.end);\n\n      return (start && start < 30) || (end && end < 30);\n    });\n\n    return pipe;\n  }\n\n  getNearestCoordinateOnPipe(coord: IVec, pipe: Pipe) {\n    let _coord = coord.sub(pipe.start);\n  }\n}\n\nexport default Pipe;\n","import { IVec } from \"../../../geometry/vect\";\nimport Line from \"../geometry/line.model\";\nimport Arc from \"../geometry/arc.model\";\n\nclass Valve extends Arc {\n  constructor(center: IVec) {\n    super(center);\n  }\n}\n\nexport default Valve;\n","import { uuid } from \"../../utils\";\n\nclass Main {\n  _id: string;\n\n  constructor() {\n    this._id = uuid();\n  }\n}\n\nexport default Main;\n","import { IVec, Vector } from \"../../geometry/vect\";\nimport CanvasModel from \"../models/canvas.model\";\nimport Valve from \"../models/heating/valve.model\";\nimport Line from \"../models/geometry/line.model\";\nimport Pipe from \"../models/heating/pipe.model\";\n\nclass Canvas {\n  model: CanvasModel;\n  container: HTMLCanvasElement | null;\n\n  constructor(model: CanvasModel) {\n    this.model = model;\n    this.container = document.querySelector(\"#editor\");\n    this.init();\n  }\n\n  init() {\n    this.initCanvasContainer();\n  }\n\n  draw() {\n    this.clear();\n    this.drawNet();\n    this.drawMouse();\n    this.drawWalls();\n    this.drawPipes();\n    this.drawValves();\n    this.drawTempObjects();\n    this.drawNearestObject();\n  }\n\n  clear() {\n    const ctx = this.container?.getContext(\"2d\");\n\n    if (!ctx || !this.model.mouse || !this.container) return;\n\n    ctx.clearRect(0, 0, this.container.width, this.container.height);\n  }\n\n  drawMouse() {\n    const ctx = this.container?.getContext(\"2d\");\n\n    if (!ctx || !this.model.mouse) return;\n\n    ctx.save();\n\n    ctx.beginPath();\n    ctx.strokeStyle = \"red\";\n    ctx.lineWidth = 2;\n    ctx.arc(this.model.mouse.x, this.model.mouse.y, 1, 0, 2 * Math.PI);\n\n    ctx.restore();\n  }\n\n  drawNet() {\n    const ctx = this.container?.getContext(\"2d\");\n\n    if (!ctx || !this.model.mouse || !this.container) return;\n    if (!this.model.config.net.show) return;\n\n    ctx.save();\n\n    ctx.beginPath();\n    ctx.lineWidth = 1;\n\n    let step = this.model.config.net.step * this.model.scale.amount;\n    let h = this.container.height;\n    let w = this.container.width;\n    let netOffset: IVec = new Vector(\n      this.model.offset.x % step,\n      this.model.offset.y % step\n    );\n\n    //x\n    let iV = 0;\n    let maxV = w / step;\n    while (iV <= maxV) {\n      let from: IVec = new Vector(step * iV + netOffset.x, 0);\n      let to: IVec = new Vector(step * iV + netOffset.x, h);\n\n      ctx.moveTo(from.x, from.y);\n      ctx.lineTo(to.x, to.y);\n      iV++;\n    }\n\n    //y\n    let iH = 0;\n    let maxH = h / step;\n    while (iH <= maxH) {\n      let from: IVec = new Vector(0, step * iH + netOffset.y);\n      let to: IVec = new Vector(w, step * iH + netOffset.y);\n\n      ctx.moveTo(from.x, from.y);\n      ctx.lineTo(to.x, to.y);\n\n      iH++;\n    }\n\n    ctx.globalAlpha = 0.2;\n\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  drawNet1() {\n    const ctx = this.container?.getContext(\"2d\");\n\n    if (!ctx || !this.model.mouse || !this.container) return;\n    if (!this.model.config.net.show) return;\n\n    ctx.save();\n\n    ctx.beginPath();\n    ctx.lineWidth = 1;\n\n    // let step = this.model.config.net.step * this.model.scale.amount;\n    let step = this.model.config.net.step;\n    let h = this.container.height;\n    let w = this.container.width;\n\n    //x\n    let iV = 0;\n    let maxV = w / step;\n    while (iV <= maxV) {\n      let from: IVec = this.getWorldCoordinates(step * iV, 0);\n      let to: IVec = this.getWorldCoordinates(step * iV, h);\n\n      ctx.moveTo(from.x, from.y);\n      ctx.lineTo(to.x, to.y);\n      iV++;\n    }\n\n    //y\n    let iH = 0;\n    let maxH = h / step;\n    while (iH <= maxH) {\n      let from: IVec = this.getWorldCoordinates(0, step * iH);\n      let to: IVec = this.getWorldCoordinates(w, step * iH);\n\n      ctx.moveTo(from.x, from.y);\n      ctx.lineTo(to.x, to.y);\n\n      iH++;\n    }\n\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  drawAxis() {\n    const ctx = this.container?.getContext(\"2d\");\n\n    if (!ctx || !this.model.mouse || !this.container) return;\n    if (!this.model.config.axis.show) return;\n\n    ctx.save();\n    ctx.beginPath();\n\n    let h = this.container.height;\n    let w = this.container.width;\n\n    let x_From = this.getWorldCoordinates(0, 0);\n    let x_To = this.getWorldCoordinates(w, 0);\n    let y_From = this.getWorldCoordinates(0, 0);\n    let y_To = this.getWorldCoordinates(0, h);\n\n    ctx.moveTo(0, x_From.y);\n    ctx.lineTo(w, x_To.y);\n\n    ctx.moveTo(y_From.x, 0);\n    ctx.lineTo(y_To.x, h);\n    ctx.strokeStyle = \"red\";\n\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  drawWalls() {\n    let walls = this.model.walls;\n\n    walls?.map((wall) => {\n      if (!this.container) return;\n\n      const ctx = this.container.getContext(\"2d\");\n\n      if (!ctx) return;\n\n      ctx.save();\n      ctx.beginPath();\n\n      let from = this.getWorldCoordinates(wall.start.x, wall.start.y);\n      let to = this.getWorldCoordinates(wall.end.x, wall.end.y);\n\n      ctx.moveTo(from.x, from.y);\n      ctx.lineTo(to.x, to.y);\n\n      console.log(\"wall.color\", wall.color);\n      ctx.strokeStyle = wall.color;\n      ctx.lineWidth = wall.width;\n\n      ctx.stroke();\n      ctx.restore();\n    });\n  }\n\n  drawPipes() {\n    let pipes = this.model.pipes;\n\n    pipes?.map((pipe) => {\n      this.drawLine(pipe);\n    });\n  }\n\n  drawLine(line: Line) {\n    if (!this.container) return;\n\n    const ctx = this.container.getContext(\"2d\");\n\n    if (!ctx) return;\n\n    ctx.save();\n    ctx.beginPath();\n\n    let from = this.getWorldCoordinates(line.start.x, line.start.y);\n    let to = this.getWorldCoordinates(line.end.x, line.end.y);\n\n    ctx.moveTo(from.x, from.y);\n    ctx.lineTo(to.x, to.y);\n\n    ctx.strokeStyle = line.color;\n    ctx.lineWidth = line.width;\n\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  drawValves() {\n    let valves = this.model.valves;\n\n    valves?.map((valve) => {\n      this.drawValve(valve);\n    });\n  }\n\n  drawValve(valve: Valve) {\n    if (!this.container) return;\n\n    const ctx = this.container.getContext(\"2d\");\n\n    if (!ctx) return;\n\n    ctx.save();\n    ctx.beginPath();\n\n    let c = this.getWorldCoordinates(valve.center.x, valve.center.y);\n\n    ctx.arc(c.x, c.y, valve.radius, 0, 2 * Math.PI);\n\n    ctx.fillStyle = \"black\";\n\n    ctx.fill();\n    ctx.restore();\n  }\n\n  drawTempObjects() {\n    if (this.model.placingObject instanceof Valve) {\n      this.drawValve(this.model.placingObject);\n    }\n\n    if (this.model.actionObject instanceof Pipe) {\n      this.drawLine(this.model.actionObject);\n    }\n  }\n\n  drawNearestObject() {\n    if (this.model.actionObject instanceof Pipe) {\n      if (this.model.nearestObject) {\n        let line = new Line(\n          this.model.actionObject.end,\n          this.model.nearestObject\n        );\n\n        line.color = \"green\";\n\n        this.drawLine(line);\n      }\n    }\n  }\n\n  //TODO: apply scale transformation here\n  getWorldCoordinates(x: number, y: number): IVec {\n    let _this = this;\n\n    let scale = function (vec: IVec): Vector {\n      return new Vector(\n        vec.x * _this.model.scale.amount,\n        vec.y * _this.model.scale.amount\n      );\n    };\n\n    let translate = function (vec: IVec): Vector {\n      return new Vector(\n        vec.x + _this.model.offset.x,\n        vec.y + _this.model.offset.y\n      );\n    }.bind(this);\n\n    let t = new Vector(x, y);\n    t = scale(t);\n    // t = rotation(t); TODO order is scaling rotation translation\n    t = translate(t);\n\n    return t;\n  }\n\n  //x: (x + this.model.offset.x) * this.model.scale.amount * this.model.scale.coord.x,\n  //       y: (y + this.model.offset.y)  * this.model.scale.amount,\n  // getLocalCoordinates(x: number, y: number) {\n  //   return {\n  //     x: (x + this.model.offset.x) * this.model.scale.amount * this.model.scale.coord ,\n  //     y: (y + this.model.offset.y)  * this.model.scale.amount,\n  //   };\n  // }\n\n  initCanvasContainer(): void {\n    if (!this.container) return;\n\n    this.container.style.height = \"600px\";\n    this.container.style.width = \"900px\";\n    this.container.height = 600;\n    this.container.width = 900;\n    this.container.style.border = \"1px solid black\";\n\n    this.model.canvasSize = {\n      y: 600,\n      x: 900,\n    };\n  }\n}\n\nexport default Canvas;\n","import CanvasModel from \"../models/canvas.model\";\n\nclass Mode {\n  model: CanvasModel;\n  container: HTMLElement | null;\n\n  constructor(model: CanvasModel) {\n    this.model = model;\n    this.container = document.querySelector(\"#mode\");\n  }\n}\n\nexport default Mode;\n","import CanvasModel from \"../models/canvas.model\";\n\nclass Stats {\n  model: CanvasModel;\n  container: HTMLElement | null;\n\n  constructor(model: CanvasModel) {\n    this.model = model;\n    this.container = document.querySelector(\"#stats\");\n    this.init();\n  }\n\n  init() {\n    this.initContainer();\n  }\n\n  render() {\n    if (!this.container) return;\n\n    this.container.innerHTML = `\n      <div style=\"display: flex; flex-direction: column\">\n        <div>x - ${Math.round(this.model.offset.x)} \n        / y - ${Math.round(this.model.offset.y)}</div>\n        \n        <div>x - ${Math.round(this.model.mouse?.x ?? 0)} \n        / y - ${Math.round(this.model.mouse?.y ?? 0)}</div>\n        \n        <div>scale - ${this.model.scale.amount}</div>\n        <div>width - ${this.model.canvasSize?.x} / height - ${\n      this.model.canvasSize?.y\n    } / </div>\n        <div>ratio x ${this.model.mouseCanvasRatio?.x} / y ${\n      this.model.mouseCanvasRatio?.y\n    }</div>\n        <div>mode is ${this.model.actionMode}</div>\n      </div>\n    `;\n  }\n\n  initContainer(): void {\n    if (!this.container) return;\n\n    this.container.style.height = \"150px\";\n    this.container.style.width = \"200px\";\n    this.container.style.border = \"1px solid black\";\n    this.container.style.marginLeft = \"10px\";\n  }\n}\n\nexport default Stats;\n","import { default as _2DController } from \"./2d\";\n\ndeclare global {\n  interface Window {\n    app: App;\n  }\n}\n\nclass App {\n  _2d: _2DController = new _2DController();\n\n  run() {\n    window.app = this;\n  }\n}\n\nexport default App;\n","import Line from \"../2d/models/geometry/line.model\";\n\nexport class Vector implements IVec {\n  x: number;\n  y: number;\n\n  constructor(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n  }\n\n  distanceTo(v: IVec) {\n    let _v = new Vector(this.x - v.x, this.y - v.y);\n    return _v.length;\n  }\n\n  distanceToLine(l: Line) {\n    return 1;\n  }\n\n  get length() {\n    return Math.sqrt(this.x ** 2 + this.y ** 2);\n  }\n\n  projection() {\n    return new Vector(this.x, this.y);\n  }\n\n  sub(v: IVec) {\n    return new Vector(this.x - v.x, this.y - v.y);\n  }\n\n  angle(v: IVec) {\n    return Math.acos((this.x * v.x + this.y * v.y) / (this.length * v.length));\n  }\n\n  // dot(a: IVec): number {\n  //   return a.x * this.x + a.y * this.y;\n  // }\n  //\n  // cross(a: IVec): number {\n  //   return 1;\n  // }\n}\n\nexport interface IVec extends ICoord {\n  length: number;\n  distanceTo: (v: IVec) => number;\n  sub: (v: IVec) => IVec;\n  distanceToLine: (l: Line) => number;\n  angle: (v: IVec) => number;\n}\n\nexport interface ICoord {\n  x: number;\n  y: number;\n}\n","import App from './app';\n\nconst app = new App();\n\napp.run();","export const uuid = (): string => {\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n    var r = (Math.random() * 16) | 0,\n      v = c == \"x\" ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n};\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}